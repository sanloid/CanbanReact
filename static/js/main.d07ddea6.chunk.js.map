{"version":3,"sources":["app/hooks.ts","slices/AuthSlice.ts","slices/ColumnSlice.ts","UI/StyledBtn.tsx","slices/CardSlice.ts","components/ModalWindow/ModalWIndow.tsx","slices/CommentSlice.ts","components/Comment/Comment.tsx","components/Card/Card.tsx","components/column/Column.tsx","components/Board/Board.tsx","App.tsx","app/store.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","authSlice","createSlice","name","initialState","author","reducers","setName","state","action","payload","actions","columnSlice","columns","id","addColumn","push","editColumn","map","e","Object","objectSpread","deleteColumn","filter","i","StyledBtn","props","style_","styles","style","concat","react_default","a","createElement","className","onClick","icon","Fragment","text","cardSlice","cards","addCard","editCard","removeCardById","removeCardByColumnId","columnID","ModalWindow","active","closeByClickOnGrayArea","setActive","stopPropagation","child","commentSlice","comments","addComment","deleteComment","commnetID","editComment","Comment","_useState","useState","_useState2","slicedToArray","edit","setEdit","_useState3","comment","_useState4","comState","setComState","dispatch","value","onChange","target","FaSave","FaEdit","FaTrash","uuidv4","require","v4","Card","cardID","auth","commentState","setCommentState","_useState5","title","description","columnName","_useState6","cardContent","setCardContent","ModalWIndow_ModalWindow","index_esm","type","Comment_Comment","assign","key","length","bi_index_esm","Column","isEditColumnName","setIsEditColumnName","newColumnName","setNewColumnName","_useState7","_useState8","cardState","setCardState","FaTimes","placeholder","FaPlus","card","components_Card_Card","Board","columnNameInput","setColumnNameInput","setAuthor","FaCheck","column_Column","App","Board_Board","rootReducer","combineReducers","CardReducer","ColumnReducer","CommentReducer","AuthReducer","persistConfig","storage","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","container","document","getElementById","createRoot","render","StrictMode","es","integration_react","loading","App_App"],"mappings":"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","file":"static/js/main.d07ddea6.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport type { PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { CardProps } from \"../types/CardType\";\r\n\r\nexport interface AuthState {\r\n    author : string;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n    author :  \"\",\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n    name: \"AuthState\",\r\n    initialState,\r\n    reducers: {\r\n        setName: (state, action: PayloadAction<string>) => {\r\n            state.author = action.payload\r\n        },\r\n    },\r\n});\r\n\r\nexport const { setName } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport type { PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { CardProps } from \"../types/CardType\";\r\nimport { ColumnProps } from \"../types/ColumnType\";\r\n\r\nexport interface ColumnState {\r\n    columns: ColumnProps[];\r\n}\r\n\r\nconst initialState: ColumnState = {\r\n    columns: [\r\n        { name: 'TODO', id: '1', author: \"\" },\r\n        { name: 'In Progress', id: '2', author: \"\" },\r\n        { name: 'Testing', id: '3', author: \"\" },\r\n        { name: 'Done', id: '4', author: \"\" },\r\n    ],\r\n};\r\n\r\nexport const columnSlice = createSlice({\r\n    name: \"ColumnState\",\r\n    initialState,\r\n    reducers: {\r\n        addColumn: (state, action: PayloadAction<ColumnProps>) => {\r\n            state.columns.push(action.payload);\r\n        },\r\n        editColumn: (state, action: PayloadAction<ColumnProps>) => {\r\n            state.columns = state.columns.map(e => {\r\n                if (e.id === action.payload.id)\r\n                    return { ...action.payload, name: action.payload.name }\r\n                return e\r\n            })\r\n        },\r\n        deleteColumn: (state, action: PayloadAction<string>) => {\r\n            state.columns = state.columns.filter(i => i.id !== action.payload);\r\n        }\r\n    },\r\n});\r\n\r\nexport const { addColumn, editColumn, deleteColumn } = columnSlice.actions;\r\n\r\nexport default columnSlice.reducer;","import React from 'react'\r\n\r\nexport interface StyledBtnProps {\r\n    icon?: Function;\r\n    text?: string;\r\n    style?: string;\r\n    onClick?: any;\r\n}\r\n\r\nexport default function StyledBtn(props: StyledBtnProps) {\r\n    let style_ = 'btn p-2 m-2 justify-content-center '\r\n    let styles = props.style? style_.concat(props.style) : style_;\r\n    return (\r\n        <div className={styles} onClick={props.onClick}>\r\n            {props.icon ? props.icon() : <></>}\r\n            {props.text ? props.text : <></>}\r\n        </div>\r\n    )\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport type { PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { CardProps } from \"../types/CardType\";\r\n\r\nexport interface CardState {\r\n    cards: CardProps[];\r\n}\r\n\r\nconst initialState: CardState = {\r\n    cards: [],\r\n};\r\n\r\nexport const cardSlice = createSlice({\r\n    name: \"CardState\",\r\n    initialState,\r\n    reducers: {\r\n        addCard: (state, action: PayloadAction<CardProps>) => {\r\n            state.cards.push(action.payload);\r\n        },\r\n        editCard: (state, action: PayloadAction<CardProps>) => {\r\n            state.cards = state.cards.map((e) => {\r\n                if (e.id === action.payload.id)\r\n                    return action.payload;\r\n                return e;\r\n            })\r\n        },\r\n        removeCardById: (state, action: PayloadAction<string>) => {\r\n            state.cards = state.cards.filter(i => i.id !== action.payload);\r\n        },\r\n        removeCardByColumnId: (state, action: PayloadAction<string>) => {\r\n            state.cards = state.cards.filter(i => i.columnID !== action.payload);\r\n        }\r\n    },\r\n});\r\n\r\nexport const { addCard, editCard, removeCardById, removeCardByColumnId } = cardSlice.actions;\r\n\r\nexport default cardSlice.reducer;","import React, { useState } from 'react'\r\n\r\ninterface ModalProps {\r\n    active: boolean;\r\n    setActive: Function;\r\n    child: Function;\r\n    closeByClickOnGrayArea: boolean;\r\n}\r\n\r\nexport const ModalWindow: React.FC<ModalProps> = (props) => {\r\n    return (\r\n        props.active ?\r\n            <div\r\n                className='modal modal-signin  d-block bg-secondary'\r\n                onClick={props.closeByClickOnGrayArea ? () => props.setActive(false) : () => null}>\r\n                <div\r\n                    className='modal-dialog'\r\n                    onClick={e => e.stopPropagation()}>\r\n                    {props.child()}\r\n                </div>\r\n            </div> : <></>\r\n    )\r\n}","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport type { PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { CommnetProp } from \"../types/CommentType\";\r\n\r\nexport interface CommentState {\r\n    comments: CommnetProp[];\r\n}\r\n\r\nconst initialState: CommentState = {\r\n    comments: [],\r\n};\r\n\r\nexport const commentSlice = createSlice({\r\n    name: \"CommentState\",\r\n    initialState,\r\n    reducers: {\r\n        addComment: (state, action: PayloadAction<CommnetProp>) => {\r\n            state.comments.push(action.payload);\r\n        },\r\n        deleteComment: (state, action: PayloadAction<string>) => {\r\n            state.comments = state.comments.filter(i => i.commnetID !== action.payload);\r\n        },\r\n        editComment : (state, action: PayloadAction<CommnetProp>) =>{\r\n            state.comments = state.comments.map( e=> {\r\n                if(e.commnetID === action.payload.commnetID)\r\n                    return action.payload\r\n                return e\r\n            })\r\n        }\r\n    },\r\n});\r\n\r\nexport const { addComment, deleteComment, editComment } = commentSlice.actions;\r\n\r\nexport default commentSlice.reducer;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { FaEdit, FaSave, FaTrash } from 'react-icons/fa';\r\nimport { useAppDispatch } from '../../app/hooks';\r\nimport { deleteComment, editComment } from '../../slices/CommentSlice';\r\nimport { CommnetProp } from '../../types/CommentType';\r\nimport StyledBtn from '../../UI/StyledBtn';\r\n\r\nexport const Comment = (props: CommnetProp) => {\r\n    const [edit, setEdit] = useState(false);\r\n    const [comState, setComState] = useState(props.comment);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const editCom = () => {\r\n        dispatch(editComment({ ...props, comment: comState }));\r\n        setEdit(false);\r\n    }\r\n\r\n    return (\r\n        <div className='card p-3 mb-3'>\r\n            <div className='d-flex justify-content-between mb-3'>\r\n                <div>\r\n                    <strong className='fs-5'>\r\n                        {props.author}\r\n                    </strong>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {edit ?\r\n                    <div className='d-flex align-items-center'>\r\n                        <textarea\r\n                            className='form-control rounded-3 mb-3'\r\n                            value={comState}\r\n                            onChange={e => setComState(e.target.value)}></textarea>\r\n                        <StyledBtn icon={FaSave} onClick={editCom} style={\"d-flex align-items-center btn-success\"} />\r\n                    </div>\r\n                    :\r\n                    <>\r\n                        <div className='text-start fw-normal'>\r\n                            {props.comment}\r\n                        </div>\r\n                        < div className='d-flex justify-content-end '>\r\n                            <StyledBtn icon={FaEdit} onClick={() => setEdit(!edit)} style={'d-flex align-items-center btn-light'} />\r\n                            <StyledBtn icon={FaTrash} style={'d-flex align-items-center btn-danger'} onClick={() => dispatch(deleteComment(props.commnetID))} />\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\r\nimport { editCard, removeCardById } from '../../slices/CardSlice'\r\nimport { CardProps } from '../../types/CardType'\r\nimport { ModalWindow } from '../ModalWindow/ModalWIndow'\r\nimport { Comment } from '../Comment/Comment'\r\nimport { addComment } from '../../slices/CommentSlice'\r\nimport { FaCheck, FaList, FaPaperPlane, FaSave, FaTimes, FaTrash, } from 'react-icons/fa';\r\nimport { BiConversation } from \"react-icons/bi\";\r\nconst { v4: uuidv4 } = require('uuid');\r\n\r\n\r\nconst Card: React.FC<CardProps> = (props) => {\r\n  const dispatch = useAppDispatch();\r\n  const comments = useAppSelector(state => state.comments).comments.filter(i => i.cardID === props.id);\r\n  const [active, setActive] = useState(false);\r\n  const author = useAppSelector(state => state.auth.author);\r\n  const [commentState, setCommentState] = useState('');\r\n  const [cardContent, setCardContent] = useState({\r\n    title: props.title,\r\n    description: props.description,\r\n    id: props.id,\r\n    columnID: props.columnID,\r\n    author: author,\r\n    columnName: props.columnName,\r\n  })\r\n\r\n\r\n  const saveNewCardContent = () => {\r\n    dispatch(editCard({ ...cardContent }));\r\n    setActive(false);\r\n  }\r\n\r\n  const EditCardModalWindow = () => {\r\n    return (\r\n      <div className='modal-content rounded-4 shadow'>\r\n        <div className='modal-header'>\r\n          <div className='fw-bold'>\r\n            Edit card\r\n          </div>\r\n          <div className='btn btn-dark d-flex align-items-center p-2' onClick={() => setActive(false)} >\r\n            <FaTimes />\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-body p-4 text-center\">\r\n          <div className='fw-bold fs-3 text-start'>\r\n            {props.columnName}\r\n          </div>\r\n          <div className='fw-bold mb-3 opacity-25 text-start'>\r\n            {props.author}\r\n          </div>\r\n          <div>\r\n            <input\r\n              className='form-control rounded-3 mb-3'\r\n              type=\"text\"\r\n              value={cardContent.title}\r\n              onChange={e => setCardContent({ ...cardContent, title: e.target.value })} />\r\n          </div>\r\n          <div>\r\n            <textarea\r\n              className='form-control rounded-3 mb-3'\r\n              value={cardContent.description}\r\n              onChange={e => setCardContent({ ...cardContent, description: e.target.value })} />\r\n          </div>\r\n          <div className='btn btn-lg btn-primary w-100 mx-0 mb-2' onClick={() => saveNewCardContent()}>\r\n            <FaSave />\r\n          </div>\r\n          <div className='fw-bold mb-3'>\r\n            Comments:\r\n            <div>\r\n              {comments.map((i) => <Comment {...i} key={uuidv4()} />)}\r\n            </div>\r\n          </div>\r\n          <div className='mb-3'>\r\n            Leave a comment:\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={commentState} onChange={e => setCommentState(e.target.value)}></textarea>\r\n          </div>\r\n          <div className='btn btn-lg btn-primary w-100' onClick={() => dispatch(addComment({ comment: commentState, author: author, commnetID: uuidv4(), cardID: props.id }))} >\r\n            <FaPaperPlane />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='card mb-3 p-3'>\r\n      <ModalWindow\r\n        closeByClickOnGrayArea={false}\r\n        active={active}\r\n        setActive={setActive}\r\n        child={EditCardModalWindow} />\r\n      <div className='mb-0'>\r\n        {props.title}\r\n      </div>\r\n      <div className='mb-3 opacity-75'>\r\n        {props.description}\r\n      </div>\r\n      <div className='d-flex justify-content-between align-items-center'>\r\n        <div className='btn btn-secondary d-flex align-items-center p-2' onClick={() => setActive(true)} >\r\n          <FaList />\r\n        </div>\r\n        <div>\r\n          {comments.length}\r\n          <BiConversation />\r\n        </div>\r\n        <div className='btn btn-danger d-flex align-items-center p-2' onClick={() => dispatch(removeCardById(props.id))}>\r\n          <FaTrash/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Card","import React, { useState } from 'react'\r\nimport { FaCheck, FaEdit, FaPlus, FaSave, FaTimes, FaTrash } from 'react-icons/fa'\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\r\nimport { addCard, removeCardByColumnId } from '../../slices/CardSlice'\r\nimport { deleteColumn, editColumn } from '../../slices/ColumnSlice'\r\nimport { ColumnProps } from '../../types/ColumnType'\r\nimport StyledBtn from '../../UI/StyledBtn'\r\nimport Card from '../Card/Card'\r\nimport { ModalWindow } from '../ModalWindow/ModalWIndow'\r\nconst { v4: uuidv4 } = require('uuid');\r\n\r\nconst Column: React.FC<ColumnProps> = (props) => {\r\n    const cards = useAppSelector(state => state.cards).cards.filter(i => i.columnID === props.id);\r\n    const [active, setActive] = useState(false);\r\n    const [isEditColumnName, setIsEditColumnName] = useState(false);\r\n    const dispatch = useAppDispatch();\r\n    const [newColumnName, setNewColumnName] = useState(props.name);\r\n    const [cardState, setCardState] = useState({ title: '', description: '' });\r\n    const author = useAppSelector(state => state.auth.author);\r\n\r\n    const changeColumnName = () => {\r\n        dispatch(editColumn({ id: props.id, name: newColumnName, author: props.author }));\r\n        setNewColumnName(\"\");\r\n    }\r\n\r\n    const addNewCard = () => {\r\n        dispatch(addCard({\r\n            id: uuidv4(),\r\n            description: cardState.description,\r\n            columnID: props.id,\r\n            title: cardState.title,\r\n            author: author,\r\n            columnName: props.name,\r\n        }))\r\n        setActive(false);\r\n    }\r\n\r\n    const deleteColumnAndAllCardFromThisColumn = () => {\r\n        dispatch(deleteColumn(props.id));\r\n        dispatch(removeCardByColumnId(props.id));\r\n    }\r\n\r\n    const newCardModalWindow = () => {\r\n        return (\r\n            <div className='modal-content rounded-4 shadow'>\r\n                <div className='modal-header'>\r\n                    Add new card\r\n                    {/* <FaTimes onClick={() => setActive(false)} /> */}\r\n                    <StyledBtn style={'btn-dark d-flex align-items-center'} icon={FaTimes} onClick={() => setActive(false)}/>\r\n                </div>\r\n                <div className=\"modal-body p-4 text-center\">\r\n                    <input\r\n                        className='form-control rounded-3 mb-3'\r\n                        type=\"text\"\r\n                        placeholder='name'\r\n                        value={cardState.title}\r\n                        onChange={e => setCardState({ ...cardState, title: e.target.value })} />\r\n                    <input\r\n                        className='form-control rounded-3 mb-3'\r\n                        type=\"text\"\r\n                        placeholder='decsription'\r\n                        value={cardState.description}\r\n                        onChange={e => setCardState({ ...cardState, description: e.target.value })} />\r\n                    <StyledBtn text={'save'} style={'btn-lg btn-primary w-100 mx-0 mb-2 text-center'} onClick={() => addNewCard()} />\r\n                    {/* <button onClick={() => addNewCard()} className=\"btn btn-lg btn-primary w-100 mx-0 mb-2\">save</button> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='col-xs-2 col-sm-6 col-md-5 col-lg-4 col-xl-4 col-xxl-3'>\r\n            <div className='card shadow-1-strong m-3 p-2 pb-0'>\r\n                <ModalWindow\r\n                    closeByClickOnGrayArea={false}\r\n                    active={active}\r\n                    setActive={setActive}\r\n                    child={newCardModalWindow} />\r\n                <div className='card-body'>\r\n                    <div className='card-header d-flex justify-content-between pl-1 pr-0 pb-3 border-0'>\r\n                        {!isEditColumnName ?\r\n                            <>\r\n                                <div className='overflow-auto fs-5 align-items-center d-flex mx-1'>\r\n                                    {props.name}\r\n                                </div>\r\n                                <div className='d-flex jusify-content-between'>\r\n                                    <StyledBtn icon={FaEdit} style={'btn-secondary d-flex align-items-center'} onClick={() => setIsEditColumnName(true)} />\r\n                                    <StyledBtn icon={FaTrash} style={'btn-danger d-flex align-items-center'} onClick={deleteColumnAndAllCardFromThisColumn} />\r\n                                </div>\r\n                            </>\r\n                            :\r\n                            <div className='d-flex '>\r\n                                <input\r\n                                    className='form-control rounded-3'\r\n                                    placeholder='text new name here...'\r\n                                    type=\"text\"\r\n                                    onChange={e => setNewColumnName(e.target.value)}\r\n                                    value={newColumnName} />\r\n                                <StyledBtn icon={FaSave} onClick={changeColumnName} style={\"btn-secondary d-flex align-items-center\"} />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <div className='mb-3 opacity-50'>\r\n                        {props.author}\r\n                    </div>\r\n                    <StyledBtn icon={FaPlus} style={'mb-3 d-flex align-items-center btn-light'} onClick={() => setActive(true)} />\r\n                    <div className=\"\">\r\n                        {cards ? cards.map((card) => {\r\n                            return (\r\n                                <Card {...card} key={uuidv4()} />\r\n                            )\r\n                        }) : <></>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Column;","import React, { useState } from 'react';\nimport { FaCheck, FaTimes } from 'react-icons/fa';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { setName } from '../../slices/AuthSlice';\nimport { addColumn } from '../../slices/ColumnSlice';\nimport { ColumnProps } from '../../types/ColumnType';\nimport StyledBtn from '../../UI/StyledBtn';\nimport Column from '../column/Column';\nimport { ModalWindow } from '../ModalWindow/ModalWIndow';\nconst { v4: uuidv4 } = require('uuid');\n\nfunction Board() {\n  const columns: ColumnProps[] = useAppSelector(state => state.columns).columns\n  const [columnNameInput, setColumnNameInput] = useState(\"\");\n  const author = useAppSelector(state => state.auth.author)\n  const [active, setActive] = useState(author === \"\");\n  const dispatch = useAppDispatch();\n\n  const addNewColumn = () => {\n    dispatch(addColumn({ name: columnNameInput, id: uuidv4(), author: author }));\n  }\n\n  const Auth = () => {\n    const [author, setAuthor] = useState('');\n    const dispatch = useAppDispatch();\n\n    const submitNameBtn = () => {\n      dispatch(setName(author));\n      setActive(false);\n    }\n\n    return (\n      <div className='modal-content rounded-4 shadow'>\n        <div className='modal-header'>\n          Hi! What's your name?\n        </div>\n        <div className=\"modal-body p-4 text-center\">\n          <input className='form-control rounded-3 mb-3' type=\"text\" onChange={e => setAuthor(e.target.value)} value={author} />\n          <button className=\"btn btn-lg btn-primary mb-2 w-100\" onClick={submitNameBtn}>OK</button>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"mx-2\">\n      <ModalWindow\n        active={active}\n        setActive={setActive}\n        child={Auth}\n        closeByClickOnGrayArea={false} />\n      <div className='d-flex'>\n        <div className='col-xs-2 col-sm-6 col-md-5 col-lg-4 col-xl-4 col-xxl-3 my-3'>\n          <div className='card p-3'>\n            <div>\n              add new column\n            </div>\n            <div>\n              <input\n                className='form-control rounded-3'\n                type=\"text\"\n                onChange={e => setColumnNameInput(e.target.value)}\n                value={columnNameInput} />\n            </div>\n            <div>\n              <StyledBtn icon={FaCheck} onClick={addNewColumn} style={'btn-lg btn-success d-flex align-items-center'} />\n            </div>\n          </div>\n        </div>\n        {columns.map((i, key) => {\n          return (\n            <Column {...i} key={uuidv4()} />\n          )\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n","import React from 'react'\r\nimport Board from './components/Board/Board'\r\n\r\n\r\nexport const App = () =>{\r\n    return(\r\n        <div className=''>\r\n            <Board/>\r\n        </div>\r\n    )\r\n}","import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nimport CardReducer from '../slices/CardSlice';\nimport ColumnReducer from '../slices/ColumnSlice';\nimport CommentReducer from '../slices/CommentSlice';\nimport AuthReducer from '../slices/AuthSlice';\n\nconst rootReducer = combineReducers({\n  cards: CardReducer,\n  columns: ColumnReducer,\n  comments: CommentReducer,\n  auth : AuthReducer,\n})\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport const persistor = persistStore(store);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { App } from './App';\nimport { persistor, store } from './app/store';\n\n\nconst container = document.getElementById('root')!;\nconst root = createRoot(container);\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}